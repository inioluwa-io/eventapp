{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\routes\\\\index.js\";\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nimport png from \"../assets/png\";\nimport colors from \"../constants/colors\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport SignIn from \"../screens/Authentication/Signin\";\nimport SignUp from \"../screens/Authentication/SignUp\";\nimport Intro from \"../screens/Authentication/Intro\";\nimport Home from \"../screens/Home\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar HomeStack = createStackNavigator();\n\nvar HomeTabs = function HomeTabs() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerBackTitle: \" \",\n      title: \" \",\n      headerShown: false,\n      headerStyle: {\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      },\n      tabBarActiveTintColor: colors.green,\n      tabBarInactiveTintColor: \"gray\",\n      tabBarActiveBackgroundColor: colors.white,\n      tabBarInactiveBackgroundColor: \"#fff\",\n      tabBarStyle: [{\n        display: \"flex\",\n        backgroundColor: \"#CE4418\",\n        paddingBottom: 3\n      }, null]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: home,\n    options: {\n      tabBarLabel: \"Home\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(Feather, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        });\n      },\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Orders\",\n    component: home,\n    options: {\n      tabBarLabel: \"Orders\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(Feather, {\n          name: \"clipboard\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"AddProduct\",\n    component: AddProduct,\n    options: {\n      tabBarLabel: \"Add Product\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(Feather, {\n          name: \"plus-circle\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"MyStore\",\n    component: MyStore,\n    options: {\n      tabBarLabel: \"My Store\",\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(Feather, {\n          name: \"shopping-bag\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: Account,\n    options: {\n      tabBarLabel: \"Account\",\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(Feather, {\n          name: \"user\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar IntroRoute = function IntroRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Intro\",\n    component: Intro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar MainRoute = function MainRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction SplashScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    StatusBar.setHidden(true);\n    setTimeout(function () {\n      setLoaded(true);\n    }, 1500);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: png.FoodWhite,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(AnimatedSplash, {\n    translucent: true,\n    isLoaded: loaded,\n    logoImage: png.ColorLogo,\n    backgroundColor: \"transparent\",\n    logoHeight: 150,\n    logoWidth: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, !props.auth.loggedIn ? !loaded ? React.createElement(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }) : React.createElement(IntroRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }) : React.createElement(MainRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(SplashScreen);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/routes/index.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AnimatedSplash","png","colors","Constants","connect","SignIn","SignUp","Intro","Home","Stack","Tab","createBottomTabNavigator","HomeStack","HomeTabs","headerBackTitle","title","headerShown","headerStyle","elevation","shadowOpacity","borderBottomWidth","tabBarActiveTintColor","green","tabBarInactiveTintColor","tabBarActiveBackgroundColor","white","tabBarInactiveBackgroundColor","tabBarStyle","display","backgroundColor","paddingBottom","home","tabBarLabel","tabBarIcon","color","size","AddProduct","MyStore","Account","IntroRoute","gestureEnabled","MainRoute","SplashScreen","props","loaded","setLoaded","StatusBar","setHidden","setTimeout","styles","container","FoodWhite","flex","ColorLogo","auth","loggedIn","StyleSheet","create","marginTop","statusBarHeight","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport {\r\n  ImageBackground,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"react-native\";\r\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\r\nimport png from \"../assets/png\";\r\nimport colors from \"../constants/colors\";\r\nimport Constants from \"expo-constants\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../screens/Authentication/Signin\";\r\nimport SignUp from \"../screens/Authentication/SignUp\";\r\nimport Intro from \"../screens/Authentication/Intro\";\r\nimport Home from \"../screens/Home\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst HomeStack = createStackNavigator();\r\n\r\n\r\nconst HomeTabs = () => (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerBackTitle: \" \",\r\n        title: \" \",\r\n        headerShown: false,\r\n        headerStyle: {\r\n          elevation: 0,\r\n          shadowOpacity: 0,\r\n          borderBottomWidth: 0,\r\n        },\r\n        tabBarActiveTintColor: colors.green,\r\n        tabBarInactiveTintColor: \"gray\",\r\n        tabBarActiveBackgroundColor: colors.white,\r\n        tabBarInactiveBackgroundColor: \"#fff\",\r\n        tabBarStyle: [\r\n          {\r\n            display: \"flex\",\r\n            backgroundColor: \"#CE4418\",\r\n            paddingBottom: 3,\r\n          },\r\n          null,\r\n        ],\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={home}\r\n        options={{\r\n          tabBarLabel: \"Home\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"home\" color={color} size={size} />\r\n          ),\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Orders\"\r\n        component={home}\r\n        options={{\r\n          tabBarLabel: \"Orders\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"clipboard\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"AddProduct\"\r\n        component={AddProduct}\r\n        options={{\r\n          tabBarLabel: \"Add Product\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"plus-circle\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"MyStore\"\r\n        component={MyStore}\r\n        options={{\r\n          tabBarLabel: \"My Store\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"shopping-bag\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Account\"\r\n        component={Account}\r\n        options={{\r\n          tabBarLabel: \"Account\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Feather name=\"user\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n  \r\n\r\nconst IntroRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"SignIn\" component={SignIn} />\r\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n        <Stack.Screen name=\"Intro\" component={Intro} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst MainRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nfunction SplashScreen(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    StatusBar.setHidden(true);\r\n    setTimeout(() => {\r\n      setLoaded(true);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={png.FoodWhite} style={{ flex: 1 }}>\r\n        <AnimatedSplash\r\n          translucent={true}\r\n          isLoaded={loaded}\r\n          logoImage={png.ColorLogo}\r\n          backgroundColor={\"transparent\"}\r\n          logoHeight={150}\r\n          logoWidth={150}\r\n        >\r\n          {!props.auth.loggedIn ? (\r\n            !loaded ? (\r\n              <Intro />\r\n            ) : (\r\n              <IntroRoute />\r\n            )\r\n          ) : (\r\n            <MainRoute />\r\n          )}\r\n        </AnimatedSplash>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: Constants.statusBarHeight,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n  return { auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SplashScreen);\r\n"]},"metadata":{},"sourceType":"module"}