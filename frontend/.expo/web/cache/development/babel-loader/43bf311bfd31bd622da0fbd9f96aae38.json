{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\screens\\\\Authentication\\\\Signin.js\";\nimport React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FloatingLabelInput } from \"react-native-floating-label-input\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser as _loginUser } from \"../../utilities/actions/auth\";\nimport globalStyles from \"../../constants/global.styles\";\nimport colors from \"../../constants/colors\";\nimport customLabelStyles from \"../../constants/floatingLabelStyles\";\n\nfunction SignIn(props) {\n  var _navigation = useNavigation();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPassword = _useState4[0],\n      setShowPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var handleSignIn = function handleSignIn() {\n    dispatch({\n      type: \"LOGIN\",\n      payload: {}\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: \"#fff\",\n      flex: 1,\n      padd: padd\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(AppPaddedView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(AppTitleNote, {\n    login: true,\n    type: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: globalStyles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(FloatingLabelInput, {\n    label: \"Email Address\",\n    value: email,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(input) {\n      return setEmail(input.trim());\n    },\n    containerStyles: globalStyles.inputWrap,\n    labelStyles: globalStyles.floatingLabelStyle,\n    customLabelStyles: customLabelStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: globalStyles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(FloatingLabelInput, {\n    label: \"Password\",\n    isPassword: true,\n    togglePassword: showPassword,\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    customShowPasswordComponent: React.createElement(View, {\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, React.createElement(Feather, {\n      name: \"eye\",\n      size: 18,\n      color: colors.mutedText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    })),\n    customHidePasswordComponent: React.createElement(View, {\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, React.createElement(Feather, {\n      name: \"eye-off\",\n      size: 18,\n      color: colors.mutedText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    })),\n    containerStyles: globalStyles.inputWrap,\n    inputStyles: {\n      color: colors.darkGray\n    },\n    labelStyles: globalStyles.floatingLabelStyle,\n    customLabelStyles: customLabelStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), React.createElement(ForgotPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), React.createElement(AppButton, {\n    title: \"Sign In\",\n    onPress: function onPress() {\n      return props.loginUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), React.createElement(LoginFooter, {\n    text: \"Don't have an account ? \",\n    linkText: \"Sign up\",\n    navigation: function navigation() {\n      return _navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser() {\n      return dispatch(_loginUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/screens/Authentication/Signin.js"],"names":["React","useState","useRef","useNavigation","connect","useDispatch","Feather","ScrollView","FloatingLabelInput","png","AppBackground","AppTitleNote","TopImageWrapper","ForgotPassword","AppButton","LoginFooter","AppPaddedView","loginUser","globalStyles","colors","customLabelStyles","SignIn","props","navigation","dispatch","password","setPassword","showPassword","setShowPassword","email","setEmail","handleSignIn","type","payload","backgroundColor","flex","padd","inputContainer","input","trim","inputWrap","floatingLabelStyle","value","padding","mutedText","color","darkGray","navigate","styles","StyleSheet","create","image","width","height","resizeMode","mapStateToProps","state","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { FloatingLabelInput } from \"react-native-floating-label-input\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser } from \"../../utilities/actions/auth\";\nimport globalStyles from \"../../constants/global.styles\";\nimport colors from \"../../constants/colors\";\nimport customLabelStyles from \"../../constants/floatingLabelStyles\";\n\nfunction SignIn(props) {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const handleSignIn = () => {\n    dispatch({\n      type: \"LOGIN\",\n      payload: {},\n    });\n  };\n\n  return (\n    <View style={{ backgroundColor: \"#fff\", flex: 1,padd }}>\n      <AppPaddedView>\n        <ScrollView showsVerticalScrollIndicator={false}>\n          <AppTitleNote login type=\"login\" />\n\n          <View style={globalStyles.inputContainer}>\n            <FloatingLabelInput\n              label=\"Email Address\"\n              value={email}\n              keyboardType=\"email-address\"\n              onChangeText={(input) => setEmail(input.trim())}\n              containerStyles={globalStyles.inputWrap}\n              labelStyles={globalStyles.floatingLabelStyle}\n              customLabelStyles={customLabelStyles}\n            />\n          </View>\n          <View style={globalStyles.inputContainer}>\n            <FloatingLabelInput\n              label={\"Password\"}\n              isPassword\n              togglePassword={showPassword}\n              value={password}\n              onChangeText={(value) => setPassword(value)}\n              customShowPasswordComponent={\n                <View style={{ padding: 4 }}>\n                  <Feather name=\"eye\" size={18} color={colors.mutedText} />\n                </View>\n              }\n              customHidePasswordComponent={\n                <View style={{ padding: 4 }}>\n                  <Feather name=\"eye-off\" size={18} color={colors.mutedText} />\n                </View>\n              }\n              containerStyles={globalStyles.inputWrap}\n              inputStyles={{ color: colors.darkGray }}\n              labelStyles={globalStyles.floatingLabelStyle}\n              customLabelStyles={customLabelStyles}\n            />\n          </View>\n          <ForgotPassword />\n          <AppButton title=\"Sign In\" onPress={() => props.loginUser()} />\n          <LoginFooter\n            text={\"Don't have an account ? \"}\n            linkText={\"Sign up\"}\n            navigation={() => navigation.navigate(\"SignUp\")}\n          />\n        </ScrollView>\n      </AppPaddedView>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\",\n  },\n});\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n  return { auth };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginUser: () => dispatch(loginUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}