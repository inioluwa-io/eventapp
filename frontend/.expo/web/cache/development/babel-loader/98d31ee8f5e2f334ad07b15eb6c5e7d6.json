{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SplashScreen from \"./components/intro/SplashScreen\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./utilities/reducer\";\nimport Routes from \"./routes\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  roundness: 2,\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    primary: \"#3498db\",\n    accent: \"#f1c40f\"\n  })\n});\n\nconsole.disableYellowBox = true;\nvar persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"auth\"]\n};\nvar reduxMiddlewares = [thunk, createLogger()];\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar store = createStore(persistedReducer, applyMiddleware.apply(void 0, reduxMiddlewares));\nvar persistedStore = persistStore(store);\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(PersistGate, {\n    persistor: persistedStore,\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(PaperProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(SplashScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(StatusBar, {\n    style: \"dark\",\n    hidden: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/App.js"],"names":["StatusBar","React","AsyncStorage","SplashScreen","DefaultTheme","Provider","PaperProvider","thunk","createLogger","PersistGate","persistStore","persistReducer","createStore","applyMiddleware","rootReducer","Routes","theme","roundness","colors","primary","accent","console","disableYellowBox","persistConfig","key","storage","whitelist","reduxMiddlewares","persistedReducer","store","persistedStore","App","styles","container","StyleSheet","create","flex"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP;AACA,SAASC,YAAT,EAAuBC,QAAQ,IAAIC,aAAnC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASR,QAAT,QAAyB,aAAzB;AACA,OAAOS,WAAP;AACA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,mCACNZ,YADM;AAETa,EAAAA,SAAS,EAAE,CAFF;AAGTC,EAAAA,MAAM,kCACDd,YAAY,CAACc,MADZ;AAEJC,IAAAA,OAAO,EAAE,SAFL;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AAHG,EAAX;;AAWAC,OAAO,CAACC,gBAAR,GAA2B,IAA3B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEvB,YAFW;AAGpBwB,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAKA,IAAMC,gBAAgB,GAAG,CAACpB,KAAD,EAAQC,YAAY,EAApB,CAAzB;AAEA,IAAMoB,gBAAgB,GAAGjB,cAAc,CAACY,aAAD,EAAgBT,WAAhB,CAAvC;AAEA,IAAMe,KAAK,GAAGjB,WAAW,CACvBgB,gBADuB,EAEvBf,eAAe,MAAf,SAAmBc,gBAAnB,CAFuB,CAAzB;AAKA,IAAMG,cAAc,GAAGpB,YAAY,CAACmB,KAAD,CAAnC;AAEA,eAAe,SAASE,GAAT,GAAe;AAC5B,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEC,cAAxB;AAAwC,IAAA,OAAO,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAwB,IAAA,MAAM,EAAE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF,CADF;AAaD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SplashScreen from \"./components/intro/SplashScreen\";\nimport { DefaultTheme, Provider as PaperProvider } from \"react-native-paper\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./utilities/reducer\";\nimport Routes from \"./routes\";\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: \"#3498db\",\n    accent: \"#f1c40f\",\n  },\n};\n\n//remove this in production || after demo\nconsole.disableYellowBox = true;\n\nconst persistConfig = {\n  key: \"root\",\n  storage: AsyncStorage,\n  whitelist: [\"auth\"],\n};\nconst reduxMiddlewares = [thunk, createLogger()];\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  applyMiddleware(...reduxMiddlewares)\n);\n\nconst persistedStore = persistStore(store);\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistedStore} loading={false}>\n        <PaperProvider theme={theme}>\n          <View style={styles.container}>\n            {/* <Text>Open up App.js to start working on your app!</Text> */}\n            <SplashScreen />\n            <StatusBar style=\"dark\" hidden={false} />\n          </View>\n        </PaperProvider>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}