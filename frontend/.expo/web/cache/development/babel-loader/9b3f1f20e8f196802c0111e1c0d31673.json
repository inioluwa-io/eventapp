{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\routes\\\\index.js\";\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nimport png from \"../assets/png\";\nimport colors from \"../constants/colors\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport SignIn from \"../screens/Authentication/Signin\";\nimport SignUp from \"../screens/Authentication/SignUp\";\nimport Intro from \"../screens/Authentication/Intro\";\nimport Home from \"../screens/Home\";\nvar Stack = createStackNavigator();\n\nvar IntroRoute = function IntroRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Intro\",\n    component: Intro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar MainRoute = function MainRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction SplashScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    StatusBar.setHidden(true);\n    setTimeout(function () {\n      setLoaded(true);\n    }, 1500);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: png.FoodWhite,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(AnimatedSplash, {\n    translucent: true,\n    isLoaded: loaded,\n    logoImage: png.ColorLogo,\n    backgroundColor: \"transparent\",\n    logoHeight: 150,\n    logoWidth: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, !props.auth.loggedIn ? !loaded ? React.createElement(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }) : React.createElement(IntroRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }) : React.createElement(MainRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(SplashScreen);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/routes/index.js"],"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","AnimatedSplash","png","colors","Constants","connect","SignIn","SignUp","Intro","Home","Stack","IntroRoute","headerShown","gestureEnabled","MainRoute","SplashScreen","props","loaded","setLoaded","StatusBar","setHidden","setTimeout","styles","container","FoodWhite","flex","ColorLogo","auth","loggedIn","StyleSheet","create","marginTop","statusBarHeight","mapStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;;;AAQA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AAEA,IAAMC,KAAK,GAAGV,oBAAoB,EAAlC;;AAEA,IAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEP,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAcD,CAfD;;AAiBA,IAAMM,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbF,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEJ,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAYD,CAbD;;AAeA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,kBAA4BnB,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOoB,MAAP;AAAA,MAAeC,SAAf;;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,SAAS,CAACC,SAAV,CAAoB,IAApB;AACAC,IAAAA,UAAU,CAAC,YAAM;AACfH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAErB,GAAG,CAACsB,SAA7B;AAAwC,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAE,IADf;AAEE,IAAA,QAAQ,EAAER,MAFZ;AAGE,IAAA,SAAS,EAAEf,GAAG,CAACwB,SAHjB;AAIE,IAAA,eAAe,EAAE,aAJnB;AAKE,IAAA,UAAU,EAAE,GALd;AAME,IAAA,SAAS,EAAE,GANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAACV,KAAK,CAACW,IAAN,CAAWC,QAAZ,GACC,CAACX,MAAD,GACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJH,GAOC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADF,CADF,CADF;AAwBD;;AAED,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTE,IAAAA,IAAI,EAAE,CADG;AAETM,IAAAA,SAAS,EAAE3B,SAAS,CAAC4B;AAFZ;AADoB,CAAlB,CAAf;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAQP,IAAR,GAAiBO,KAAjB,CAAQP,IAAR;AACA,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAetB,OAAO,CAAC4B,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,YAA/B,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport {\r\n  ImageBackground,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"react-native\";\r\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\r\nimport png from \"../assets/png\";\r\nimport colors from \"../constants/colors\";\r\nimport Constants from \"expo-constants\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../screens/Authentication/Signin\";\r\nimport SignUp from \"../screens/Authentication/SignUp\";\r\nimport Intro from \"../screens/Authentication/Intro\";\r\nimport Home from \"../screens/Home\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst IntroRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"SignIn\" component={SignIn} />\r\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n        <Stack.Screen name=\"Intro\" component={Intro} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst MainRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nfunction SplashScreen(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    StatusBar.setHidden(true);\r\n    setTimeout(() => {\r\n      setLoaded(true);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={png.FoodWhite} style={{ flex: 1 }}>\r\n        <AnimatedSplash\r\n          translucent={true}\r\n          isLoaded={loaded}\r\n          logoImage={png.ColorLogo}\r\n          backgroundColor={\"transparent\"}\r\n          logoHeight={150}\r\n          logoWidth={150}\r\n        >\r\n          {!props.auth.loggedIn ? (\r\n            !loaded ? (\r\n              <Intro />\r\n            ) : (\r\n              <IntroRoute />\r\n            )\r\n          ) : (\r\n            <MainRoute />\r\n          )}\r\n        </AnimatedSplash>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: Constants.statusBarHeight,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n  return { auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SplashScreen);\r\n"]},"metadata":{},"sourceType":"module"}