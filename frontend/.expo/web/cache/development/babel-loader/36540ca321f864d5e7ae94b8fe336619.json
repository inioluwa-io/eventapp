{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\components\\\\intro\\\\SplashScreen.js\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nimport png from \"../../assets/png\";\nimport colors from \"../../constants/colors\";\nimport Intro from \"./Intro\";\nimport GettingStarted from \"./GettingStarted\";\nimport IntroNav from \"./IntroNav\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport MainNav from \"../main/mainNav\";\n\nfunction SplashScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    StatusBar.setHidden(true);\n    setTimeout(function () {\n      setLoaded(true);\n    }, 1500);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: png.FoodWhite,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(AnimatedSplash, {\n    translucent: true,\n    isLoaded: loaded,\n    logoImage: png.ColorLogo,\n    backgroundColor: \"transparent\",\n    logoHeight: 150,\n    logoWidth: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, !props.auth.loggedIn ? !loaded ? React.createElement(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }\n  }) : React.createElement(IntroNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 58\n    }\n  }) : React.createElement(MainNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 73\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(SplashScreen);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/components/intro/SplashScreen.js"],"names":["React","useState","useEffect","AnimatedSplash","png","colors","Intro","GettingStarted","IntroNav","Constants","connect","MainNav","SplashScreen","props","loaded","setLoaded","StatusBar","setHidden","setTimeout","styles","container","FoodWhite","flex","ColorLogo","auth","loggedIn","StyleSheet","create","marginTop","statusBarHeight","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;;;AAQA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,GAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,cAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,kBAA4BZ,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,SAAS,CAACC,SAAV,CAAoB,IAApB;AACAC,IAAAA,UAAU,CAAC,YAAM;AACbH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFS,EAEP,IAFO,CAAV;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEhB,GAAG,CAACiB,SAA7B;AAAwC,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAE,IADf;AAEE,IAAA,QAAQ,EAAER,MAFZ;AAGE,IAAA,SAAS,EAAEV,GAAG,CAACmB,SAHjB;AAIE,IAAA,eAAe,EAAE,aAJnB;AAKE,IAAA,UAAU,EAAE,GALd;AAME,IAAA,SAAS,EAAE,GANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAACV,KAAK,CAACW,IAAN,CAAWC,QAAZ,GAAwB,CAACX,MAAD,GAAU,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAV,GAAsB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C,GAA6D,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhE,CADF,CADF,CADF;AAgBD;;AAED,IAAMK,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTE,IAAAA,IAAI,EAAE,CADG;AAETM,IAAAA,SAAS,EAACnB,SAAS,CAACoB;AAFX;AADoB,CAAlB,CAAf;;AAOA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAQP,IAAR,GAAiBO,KAAjB,CAAQP,IAAR;AACA,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAHD;;AAMA,eAAed,OAAO,CAACoB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,YAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  ImageBackground,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nimport png from \"../../assets/png\";\nimport colors from \"../../constants/colors\";\nimport Intro from \"./Intro\";\nimport GettingStarted from \"./GettingStarted\";\nimport IntroNav from \"./IntroNav\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport MainNav from \"../main/mainNav\";\n\nfunction SplashScreen(props) {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    StatusBar.setHidden(true);\n    setTimeout(() => {\n        setLoaded(true)\n    }, 1500);\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={png.FoodWhite} style={{ flex: 1 }}>\n        <AnimatedSplash\n          translucent={true}\n          isLoaded={loaded}\n          logoImage={png.ColorLogo}\n          backgroundColor={\"transparent\"}\n          logoHeight={150}\n          logoWidth={150}\n        >\n          {!props.auth.loggedIn ? (!loaded ? <Intro /> : <IntroNav />): <MainNav/>}\n        </AnimatedSplash>\n      </ImageBackground>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop:Constants.statusBarHeight\n  },\n});\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n  return { auth };\n};\n\n\nexport default connect(mapStateToProps, null)(SplashScreen);\n"]},"metadata":{},"sourceType":"module"}