{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\routes\\\\index.js\";\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\nimport png from \"../assets/png\";\nimport colors from \"../constants/colors\";\nimport Constants from \"expo-constants\";\nimport { connect } from \"react-redux\";\nimport SignIn from \"../screens/Authentication/Signin\";\nimport SignUp from \"../screens/Authentication/SignUp\";\nimport Intro from \"../screens/Authentication/Intro\";\nimport Home from \"../screens/Home\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport Architect from \"../screens/Architect\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar HomeStack = createStackNavigator();\n\nvar ArchitectTabs = function ArchitectTabs() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: {\n      headerBackTitle: \" \",\n      title: \" \",\n      headerShown: false,\n      headerStyle: {\n        elevation: 0,\n        shadowOpacity: 0,\n        borderBottomWidth: 0\n      },\n      tabBarActiveTintColor: colors.primary,\n      tabBarInactiveTintColor: \"gray\",\n      tabBarActiveBackgroundColor: colors.white,\n      tabBarInactiveBackgroundColor: \"#fff\",\n      tabBarStyle: [{\n        display: \"flex\",\n        backgroundColor: \"#CE4418\"\n      }, null]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    options: {\n      tabBarShowLabel: false,\n      tabBarLabel: \"Home\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(Feather, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        });\n      },\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Orders\",\n    component: Home,\n    options: {\n      tabBarLabel: \"Orders\",\n      tabBarShowLabel: false,\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(Feather, {\n          name: \"clipboard\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: UserProfile,\n    options: {\n      tabBarLabel: \"Account\",\n      tabBarShowLabel: false,\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(Feather, {\n          name: \"user\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar IntroRoute = function IntroRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SignIn\",\n    component: SignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Intro\",\n    component: Intro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar MainRoute = function MainRoute() {\n  return React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Architect\",\n    component: Architect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Profile\",\n    component: Profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })));\n};\n\nfunction SplashScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  useEffect(function () {\n    StatusBar.setHidden(true);\n    setTimeout(function () {\n      StatusBar.setHidden(false);\n      setLoaded(true);\n    }, 1500);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: png.FoodWhite,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, React.createElement(AnimatedSplash, {\n    translucent: true,\n    isLoaded: loaded,\n    logoImage: png.ColorLogo,\n    backgroundColor: \"transparent\",\n    logoHeight: 150,\n    logoWidth: 150,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, !props.auth.loggedIn ? !loaded ? React.createElement(Intro, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }) : React.createElement(IntroRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }) : React.createElement(MainRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: Constants.statusBarHeight\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nexport default connect(mapStateToProps, null)(SplashScreen);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/routes/index.js"],"names":["React","useState","useEffect","Feather","NavigationContainer","createStackNavigator","createBottomTabNavigator","AnimatedSplash","png","colors","Constants","connect","SignIn","SignUp","Intro","Home","Profile","UserProfile","Architect","Stack","Tab","HomeStack","ArchitectTabs","headerBackTitle","title","headerShown","headerStyle","elevation","shadowOpacity","borderBottomWidth","tabBarActiveTintColor","primary","tabBarInactiveTintColor","tabBarActiveBackgroundColor","white","tabBarInactiveBackgroundColor","tabBarStyle","display","backgroundColor","tabBarShowLabel","tabBarLabel","tabBarIcon","color","size","IntroRoute","gestureEnabled","MainRoute","SplashScreen","props","loaded","setLoaded","StatusBar","setHidden","setTimeout","styles","container","FoodWhite","flex","ColorLogo","auth","loggedIn","StyleSheet","create","marginTop","statusBarHeight","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport {\r\n  ImageBackground,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n} from \"react-native\";\r\nimport AnimatedSplash from \"react-native-animated-splash-screen\";\r\nimport png from \"../assets/png\";\r\nimport colors from \"../constants/colors\";\r\nimport Constants from \"expo-constants\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../screens/Authentication/Signin\";\r\nimport SignUp from \"../screens/Authentication/SignUp\";\r\nimport Intro from \"../screens/Authentication/Intro\";\r\nimport Home from \"../screens/Home\";\r\nimport Profile from \"../screens/Profile\";\r\nimport UserProfile from \"../screens/UserProfile\";\r\nimport Architect from \"../screens/Architect\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst HomeStack = createStackNavigator();\r\n\r\nconst ArchitectTabs = () => (\r\n  <Tab.Navigator\r\n    screenOptions={{\r\n      headerBackTitle: \" \",\r\n      title: \" \",\r\n      headerShown: false,\r\n      headerStyle: {\r\n        elevation: 0,\r\n        shadowOpacity: 0,\r\n        borderBottomWidth: 0,\r\n      },\r\n      tabBarActiveTintColor: colors.primary,\r\n      tabBarInactiveTintColor: \"gray\",\r\n      tabBarActiveBackgroundColor: colors.white,\r\n      tabBarInactiveBackgroundColor: \"#fff\",\r\n      tabBarStyle: [\r\n        {\r\n          display: \"flex\",\r\n          backgroundColor: \"#CE4418\",\r\n        },\r\n        null,\r\n      ],\r\n    }}\r\n  >\r\n    <Tab.Screen\r\n      name=\"Home\"\r\n      component={Home}\r\n      options={{\r\n        tabBarShowLabel: false,\r\n        tabBarLabel: \"Home\",\r\n        tabBarIcon: ({ color, size }) => (\r\n          <Feather name=\"home\" color={color} size={size} />\r\n        ),\r\n        headerShown: false,\r\n      }}\r\n    />\r\n    <Tab.Screen\r\n      name=\"Orders\"\r\n      component={Home}\r\n      options={{\r\n        tabBarLabel: \"Orders\",\r\n        tabBarShowLabel: false,\r\n        tabBarIcon: ({ color, size }) => (\r\n          <Feather name=\"clipboard\" color={color} size={size} />\r\n        ),\r\n      }}\r\n    />\r\n    <Tab.Screen\r\n      name=\"Account\"\r\n      component={UserProfile}\r\n      options={{\r\n        tabBarLabel: \"Account\",\r\n        tabBarShowLabel: false,\r\n        tabBarIcon: ({ color, size }) => (\r\n          <Feather name=\"user\" color={color} size={size} />\r\n        ),\r\n      }}\r\n    />\r\n  </Tab.Navigator>\r\n);\r\n\r\nconst IntroRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: false,\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"SignIn\" component={SignIn} />\r\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\r\n        <Stack.Screen name=\"Intro\" component={Intro} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nconst MainRoute = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <HomeStack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          gestureEnabled: true,\r\n        }}\r\n      >\r\n        <HomeStack.Screen name=\"Home\" component={Home} />\r\n        <HomeStack.Screen name=\"Architect\" component={Architect} />\r\n        <HomeStack.Screen name=\"Profile\" component={Profile} />\r\n      </HomeStack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nfunction SplashScreen(props) {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    StatusBar.setHidden(true);\r\n    setTimeout(() => {\r\n      StatusBar.setHidden(false);\r\n      setLoaded(true);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={png.FoodWhite} style={{ flex: 1 }}>\r\n        <AnimatedSplash\r\n          translucent={true}\r\n          isLoaded={loaded}\r\n          logoImage={png.ColorLogo}\r\n          backgroundColor={\"transparent\"}\r\n          logoHeight={150}\r\n          logoWidth={150}\r\n        >\r\n          {!props.auth.loggedIn ? (\r\n            !loaded ? (\r\n              <Intro />\r\n            ) : (\r\n              <IntroRoute />\r\n            )\r\n          ) : (\r\n            <MainRoute />\r\n          )}\r\n        </AnimatedSplash>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: Constants.statusBarHeight,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth } = state;\r\n  return { auth };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(SplashScreen);\r\n"]},"metadata":{},"sourceType":"module"}