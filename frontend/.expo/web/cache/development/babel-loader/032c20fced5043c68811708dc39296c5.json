{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\screens\\\\Authentication\\\\Signin.js\";\nimport React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { connect } from \"react-redux\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FloatingLabelInput } from \"react-native-floating-label-input\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser as _loginUser } from \"../../utilities/actions/auth\";\nimport globalStyles from \"../../constants/global.styles\";\nimport customLabelStyles from \"../../constants/floatingLabelStyles\";\n\nfunction SignIn(props) {\n  var _navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPassword = _useState4[0],\n      setShowPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  return React.createElement(AppBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(AppPaddedView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(TopImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: png.ColorLogo,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), React.createElement(AppTitleNote, {\n    login: true,\n    type: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: globalStyles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(FloatingLabelInput, {\n    label: \"Email Address\",\n    value: email,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(input) {\n      return setEmail(input.trim());\n    },\n    containerStyles: globalStyles.inputWrap,\n    labelStyles: globalStyles.floatingLabelStyle,\n    customLabelStyles: customLabelStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: globalStyles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(FloatingLabelInput, {\n    label: \"Password\",\n    isPassword: true,\n    togglePassword: showPassword,\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    customShowPasswordComponent: React.createElement(View, {\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, React.createElement(Feather, {\n      name: \"eye\",\n      size: 18,\n      color: colors.mutedText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })),\n    customHidePasswordComponent: React.createElement(View, {\n      style: {\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, React.createElement(Feather, {\n      name: \"eye-off\",\n      size: 18,\n      color: colors.mutedText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })),\n    containerStyles: globalStyles.inputWrap,\n    inputStyles: {\n      color: colors.darkGray\n    },\n    labelStyles: globalStyles.floatingLabelStyle,\n    customLabelStyles: customLabelStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), React.createElement(ForgotPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Sign In\",\n    onPress: function onPress() {\n      return props.loginUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(LoginFooter, {\n    text: \"Don't have an account ? \",\n    linkText: \"Sign up\",\n    navigation: function navigation() {\n      return _navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser() {\n      return dispatch(_loginUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/screens/Authentication/Signin.js"],"names":["React","useState","useRef","useNavigation","connect","Feather","ScrollView","FloatingLabelInput","png","AppBackground","AppTitleNote","TopImageWrapper","ForgotPassword","AppButton","LoginFooter","AppPaddedView","loginUser","globalStyles","customLabelStyles","SignIn","props","navigation","password","setPassword","showPassword","setShowPassword","email","setEmail","ColorLogo","styles","image","inputContainer","input","trim","inputWrap","floatingLabelStyle","value","padding","colors","mutedText","color","darkGray","navigate","StyleSheet","create","width","height","resizeMode","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { connect } from \"react-redux\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { Image, StyleSheet, View } from \"react-native\";\nimport { FloatingLabelInput } from \"react-native-floating-label-input\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser } from \"../../utilities/actions/auth\";\nimport globalStyles from \"../../constants/global.styles\";\nimport customLabelStyles from \"../../constants/floatingLabelStyles\";\n\nfunction SignIn(props) {\n  const navigation = useNavigation();\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <AppBackground>\n      <AppPaddedView>\n        <TopImageWrapper>\n          <Image source={png.ColorLogo} style={styles.image} />\n        </TopImageWrapper>\n\n        <AppTitleNote login type=\"login\" />\n\n        <View style={globalStyles.inputContainer}>\n          <FloatingLabelInput\n            label=\"Email Address\"\n            value={email}\n            keyboardType=\"email-address\"\n            onChangeText={(input) => setEmail(input.trim())}\n            containerStyles={globalStyles.inputWrap}\n            labelStyles={globalStyles.floatingLabelStyle}\n            customLabelStyles={customLabelStyles}\n          />\n        </View>\n        <View style={globalStyles.inputContainer}>\n          <FloatingLabelInput\n            label={\"Password\"}\n            isPassword\n            togglePassword={showPassword}\n            value={password}\n            onChangeText={(value) => setPassword(value)}\n            customShowPasswordComponent={\n              <View style={{ padding: 4 }}>\n                <Feather name=\"eye\" size={18} color={colors.mutedText} />\n              </View>\n            }\n            customHidePasswordComponent={\n              <View style={{ padding: 4 }}>\n                <Feather name=\"eye-off\" size={18} color={colors.mutedText} />\n              </View>\n            }\n            containerStyles={globalStyles.inputWrap}\n            inputStyles={{ color: colors.darkGray }}\n            labelStyles={globalStyles.floatingLabelStyle}\n            customLabelStyles={customLabelStyles}\n          />\n        </View>\n        <ForgotPassword />\n        <AppButton title=\"Sign In\" onPress={() => props.loginUser()} />\n        <LoginFooter\n          text={\"Don't have an account ? \"}\n          linkText={\"Sign up\"}\n          navigation={() => navigation.navigate(\"SignUp\")}\n        />\n      </AppPaddedView>\n    </AppBackground>\n  );\n}\nconst styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\",\n  },\n});\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n  return { auth };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginUser: () => dispatch(loginUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}