{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"mask\", \"isPassword\", \"maxLength\", \"inputStyles\", \"showCountdown\", \"showCountdownStyles\", \"labelStyles\", \"darkTheme\", \"countdownLabel\", \"currencyDivider\", \"maskType\", \"onChangeText\", \"secureTextEntry\", \"customHidePasswordComponent\", \"customShowPasswordComponent\", \"isFocused\", \"onBlur\", \"onFocus\", \"onTogglePassword\", \"togglePassword\", \"leftComponent\", \"rightComponent\", \"customHidePasswordImage\", \"customLabelStyles\", \"staticLabel\", \"hint\", \"hintTextColor\", \"placeholder\", \"placeholderTextColor\", \"onSubmit\", \"containerStyles\", \"customShowPasswordImage\", \"showPasswordContainerStyles\", \"maxDecimalPlaces\", \"multiline\", \"showPasswordImageStyles\", \"value\", \"onSelectionChange\", \"animationDuration\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\node_modules\\\\react-native-floating-label-input\\\\src\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ReactAnimated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated, { EasingNode, timing, interpolateColors } from 'react-native-reanimated';\nimport { styles } from \"./styles\";\nimport makeVisibleWhite from \"./assets/make_visible_white.png\";\nimport makeInvisibleWhite from \"./assets/make_invisible_white.png\";\nimport makeVisibleBlack from \"./assets/make_visible_black.png\";\nimport makeInvisibleBlack from \"./assets/make_invisible_black.png\";\nvar setGlobalStyles = {\n  containerStyles: undefined,\n  customLabelStyles: undefined,\n  inputStyles: undefined,\n  labelStyles: undefined,\n  showPasswordContainerStyles: undefined,\n  showPasswordImageStyles: undefined,\n  showCountdownStyles: undefined\n};\nvar AnimatedText = Animated.createAnimatedComponent(Text);\n\nvar FloatingLabelInput = function FloatingLabelInput(_ref, ref) {\n  var _customLabelStyles, _customLabelStyles2, _customLabelStyles3;\n\n  var label = _ref.label,\n      mask = _ref.mask,\n      isPassword = _ref.isPassword,\n      maxLength = _ref.maxLength,\n      inputStyles = _ref.inputStyles,\n      showCountdown = _ref.showCountdown,\n      showCountdownStyles = _ref.showCountdownStyles,\n      labelStyles = _ref.labelStyles,\n      darkTheme = _ref.darkTheme,\n      countdownLabel = _ref.countdownLabel,\n      currencyDivider = _ref.currencyDivider,\n      maskType = _ref.maskType,\n      onChangeText = _ref.onChangeText,\n      secureTextEntry = _ref.secureTextEntry,\n      customHidePasswordComponent = _ref.customHidePasswordComponent,\n      customShowPasswordComponent = _ref.customShowPasswordComponent,\n      isFocused = _ref.isFocused,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onTogglePassword = _ref.onTogglePassword,\n      togglePassword = _ref.togglePassword,\n      leftComponent = _ref.leftComponent,\n      rightComponent = _ref.rightComponent,\n      customHidePasswordImage = _ref.customHidePasswordImage,\n      _ref$customLabelStyle = _ref.customLabelStyles,\n      customLabelStyles = _ref$customLabelStyle === void 0 ? {} : _ref$customLabelStyle,\n      _ref$staticLabel = _ref.staticLabel,\n      staticLabel = _ref$staticLabel === void 0 ? false : _ref$staticLabel,\n      hint = _ref.hint,\n      hintTextColor = _ref.hintTextColor,\n      placeholder = _ref.placeholder,\n      placeholderTextColor = _ref.placeholderTextColor,\n      onSubmit = _ref.onSubmit,\n      containerStyles = _ref.containerStyles,\n      customShowPasswordImage = _ref.customShowPasswordImage,\n      showPasswordContainerStyles = _ref.showPasswordContainerStyles,\n      maxDecimalPlaces = _ref.maxDecimalPlaces,\n      multiline = _ref.multiline,\n      showPasswordImageStyles = _ref.showPasswordImageStyles,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value,\n      onSelectionChange = _ref.onSelectionChange,\n      animationDuration = _ref.animationDuration,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      halfTop = _useState2[0],\n      setHalfTop = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocusedState = _useState4[0],\n      setIsFocused = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      secureText = _useState6[0],\n      setSecureText = _useState6[1];\n\n  var inputRef = useRef(null);\n  customLabelStyles = _objectSpread(_objectSpread({\n    fontSizeFocused: 10,\n    fontSizeBlurred: 14,\n    colorFocused: '#49658c',\n    colorBlurred: '#49658c'\n  }, setGlobalStyles == null ? void 0 : setGlobalStyles.customLabelStyles), customLabelStyles);\n\n  var _useState7 = useState(new Animated.Value(0)),\n      _useState8 = _slicedToArray(_useState7, 1),\n      fontColorAnimated = _useState8[0];\n\n  var _useState9 = useState(new Animated.Value(isFocused ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14)),\n      _useState10 = _slicedToArray(_useState9, 1),\n      fontSizeAnimated = _useState10[0];\n\n  var _useState11 = useState(new Animated.Value(staticLabel ? ((_customLabelStyles = customLabelStyles) == null ? void 0 : _customLabelStyles.leftFocused) !== undefined ? customLabelStyles.leftFocused : 15 : customLabelStyles != undefined && customLabelStyles.leftBlurred !== undefined ? customLabelStyles.leftBlurred : 0)),\n      _useState12 = _slicedToArray(_useState11, 1),\n      leftAnimated = _useState12[0];\n\n  var _useState13 = useState(new Animated.Value(staticLabel ? ((_customLabelStyles2 = customLabelStyles) == null ? void 0 : _customLabelStyles2.topFocused) !== undefined ? customLabelStyles.topFocused : 0 : customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 0)),\n      _useState14 = _slicedToArray(_useState13, 1),\n      topAnimated = _useState14[0];\n\n  useEffect(function () {\n    if (isFocused === undefined) {\n      if (value !== '' || isFocusedState) {\n        setIsFocused(true);\n      } else if (value === '' || value === null) {\n        setIsFocused(false);\n      }\n    }\n  }, [value]);\n  useEffect(function () {\n    if (isFocused !== undefined) {\n      if (value !== '' || isFocused) {\n        setIsFocused(true);\n      } else {\n        setIsFocused(false);\n      }\n    }\n  }, [isFocused, value]);\n  useEffect(function () {\n    if (togglePassword !== undefined) {\n      _toggleVisibility(togglePassword);\n    }\n  }, [togglePassword]);\n  useEffect(function () {\n    if (isFocusedState || value !== '') {\n      if (halfTop !== 0) {\n        animateFocus();\n      }\n    } else {\n      animateBlur();\n    }\n  }, [isFocusedState]);\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  });\n  useEffect(function () {\n    if (!staticLabel && customLabelStyles.topFocused === undefined && isFocusedState) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topFocused ? customLabelStyles.topFocused : -halfTop + (isFocusedState ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14),\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else if (staticLabel && isFocusedState) {\n      Animated.timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }, [halfTop]);\n\n  function animateFocus() {\n    if (!staticLabel) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topFocused ? customLabelStyles.topFocused : -halfTop + (isFocusedState ? customLabelStyles.fontSizeFocused ? customLabelStyles.fontSizeFocused : 10 : customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14),\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else {\n      Animated.timing(fontColorAnimated, {\n        toValue: 1,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }\n\n  function animateBlur() {\n    if (!staticLabel) {\n      ReactAnimated.parallel([timing(leftAnimated, {\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear,\n        toValue: customLabelStyles.leftBlurred ? customLabelStyles.leftBlurred : 0\n      }), timing(fontSizeAnimated, {\n        toValue: customLabelStyles.fontSizeBlurred ? customLabelStyles.fontSizeBlurred : 14,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(topAnimated, {\n        toValue: customLabelStyles.topBlurred ? customLabelStyles.topBlurred : 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }), timing(fontColorAnimated, {\n        toValue: 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      })]).start();\n    } else {\n      Animated.timing(fontColorAnimated, {\n        toValue: 0,\n        duration: animationDuration ? animationDuration : 300,\n        easing: EasingNode.linear\n      }).start();\n    }\n  }\n\n  function handleFocus() {\n    setIsFocused(true);\n  }\n\n  function handleBlur() {\n    if (value === '') {\n      setIsFocused(false);\n    }\n  }\n\n  function setFocus() {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.focus();\n  }\n\n  function setBlur() {\n    var _inputRef$current2;\n\n    (_inputRef$current2 = inputRef.current) == null ? void 0 : _inputRef$current2.blur();\n  }\n\n  function _toggleVisibility(toggle) {\n    if (toggle === undefined) {\n      if (onTogglePassword) {\n        onTogglePassword(!secureText);\n      }\n\n      setSecureText(!secureText);\n      secureText ? setFocus() : setBlur();\n    } else {\n      if (!(secureText && !toggle || !secureText && toggle)) {\n        if (onTogglePassword) {\n          onTogglePassword(!toggle);\n        }\n\n        setSecureText(!toggle);\n        toggle ? setFocus() : setBlur();\n      }\n    }\n  }\n\n  function onSubmitEditing() {\n    if (onSubmit !== undefined) {\n      onSubmit();\n    }\n  }\n\n  var imgSource = darkTheme ? secureText ? customShowPasswordImage || makeVisibleBlack : customHidePasswordImage || makeInvisibleBlack : secureText ? customShowPasswordImage || makeVisibleWhite : customHidePasswordImage || makeInvisibleWhite;\n\n  var style = _objectSpread(_objectSpread(_objectSpread({}, setGlobalStyles == null ? void 0 : setGlobalStyles.labelStyles), labelStyles), {}, {\n    left: (labelStyles == null ? void 0 : labelStyles.left) !== undefined ? labelStyles == null ? void 0 : labelStyles.left : 5,\n    fontSize: staticLabel ? ((_customLabelStyles3 = customLabelStyles) == null ? void 0 : _customLabelStyles3.fontSizeFocused) !== undefined ? customLabelStyles.fontSizeFocused : 10 : !isFocusedState ? customLabelStyles.fontSizeBlurred : customLabelStyles.fontSizeFocused,\n    color: interpolateColors(fontColorAnimated, {\n      inputRange: [0, 1],\n      outputColorRange: [customLabelStyles.colorBlurred, customLabelStyles.colorFocused]\n    }),\n    alignSelf: 'center',\n    position: 'absolute',\n    flex: 1,\n    zIndex: 999\n  });\n\n  var input = inputStyles !== undefined ? inputStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.inputStyles) !== undefined ? setGlobalStyles.inputStyles : styles.input;\n  input = _objectSpread(_objectSpread({}, input), {}, {\n    flex: 1,\n    color: input.color !== undefined ? input.color : customLabelStyles.colorFocused,\n    zIndex: (style == null ? void 0 : style.zIndex) !== undefined ? style.zIndex - 2 : 0\n  });\n  containerStyles = containerStyles !== undefined ? containerStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.containerStyles) !== undefined ? setGlobalStyles == null ? void 0 : setGlobalStyles.containerStyles : styles.container;\n  containerStyles = _objectSpread(_objectSpread({}, containerStyles), {}, {\n    alignItems: 'center',\n    flexDirection: 'row',\n    flex: 1,\n    zIndex: (style == null ? void 0 : style.zIndex) !== undefined ? style.zIndex - 6 : 0\n  });\n  var toggleButton = showPasswordContainerStyles !== undefined ? showPasswordContainerStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.showPasswordContainerStyles) !== undefined ? setGlobalStyles.showPasswordContainerStyles : styles.toggleButton;\n  toggleButton = _objectSpread(_objectSpread({}, toggleButton), {}, {\n    alignSelf: 'center'\n  });\n  var img = showPasswordImageStyles !== undefined ? showPasswordImageStyles : (setGlobalStyles == null ? void 0 : setGlobalStyles.showPasswordImageStyles) !== undefined ? setGlobalStyles.showPasswordImageStyles : styles.img;\n  img = _objectSpread({\n    height: 25,\n    width: 25\n  }, img);\n\n  var countdown = _objectSpread(_objectSpread(_objectSpread({}, styles.countdown), setGlobalStyles == null ? void 0 : setGlobalStyles.showCountdownStyles), showCountdownStyles);\n\n  function onChangeTextCallback(val) {\n    if (maskType !== undefined || mask !== undefined) {\n      if (maskType !== 'currency' && mask !== undefined) {\n        var unmasked = val.replace(/[^0-9A-Za-z]/g, '');\n        var positions = [];\n\n        for (var i = 0; i < mask.length; i++) {\n          if (mask[i].match(/[^0-9A-Za-z]/)) {\n            positions.push(i);\n          }\n        }\n\n        var newValue = '';\n        var offset = 0;\n\n        for (var j = 0; j < unmasked.length; j++) {\n          while ((_mask = mask[j + offset]) != null && _mask.match(/[^0-9A-Za-z]/)) {\n            var _mask;\n\n            newValue += mask[j + offset];\n            offset++;\n          }\n\n          newValue += unmasked[j];\n        }\n\n        return onChangeText ? onChangeText(newValue) : false;\n      }\n\n      if (maskType === 'currency') {\n        var divider = '';\n        var decimal = '';\n\n        if (currencyDivider === ',') {\n          divider = ',';\n          decimal = '.';\n        } else {\n          divider = '.';\n          decimal = ',';\n        }\n\n        if (value !== undefined && value.length < val.length) {\n          if (val.includes(decimal)) {\n            var intVal = val.split(decimal)[0].replace(/[,.]/g, '');\n            var decimalValue = val.split(decimal)[1];\n\n            if (intVal.length > 3) {\n              var arr = [];\n\n              for (var _i = 0; _i < intVal.length; _i += 3) {\n                arr.push(intVal.split('').splice(intVal.length - _i, 3).join(''));\n              }\n\n              arr = arr.reverse();\n              arr.pop();\n              var initial = arr.join('');\n\n              if (intVal.includes(initial)) {\n                intVal = intVal.replace(initial, '');\n              }\n\n              intVal = intVal + divider + arr.join(divider);\n            }\n\n            val = intVal + decimal + decimalValue;\n            var decimalPlaces = maxDecimalPlaces !== undefined ? maxDecimalPlaces : 2;\n\n            if (val.split(decimal)[1] !== undefined && value.split(decimal)[1] !== undefined && val.split(decimal)[1].length > value.split(decimal)[1].length && value.split(decimal)[1].length === decimalPlaces) {\n              return;\n            }\n\n            if (val.split(decimal)[1].length > decimalPlaces) {\n              val = val.slice(0, val.length - 1);\n            }\n          } else if (val.length > 3) {\n            var _arr = [];\n\n            var _unmasked = val.replace(/[,.]/g, '');\n\n            for (var _i2 = 0; _i2 < _unmasked.length; _i2 += 3) {\n              _arr.push(_unmasked.split('').splice(_unmasked.length - _i2, 3).join(''));\n            }\n\n            _arr = _arr.reverse();\n\n            _arr.pop();\n\n            var _initial = _arr.join('');\n\n            if (_unmasked.includes(_initial)) {\n              _unmasked = _unmasked.replace(_initial, '');\n            }\n\n            val = _unmasked + divider + _arr.join(divider);\n          }\n        }\n\n        return onChangeText ? onChangeText(val) : false;\n      }\n\n      return onChangeText ? onChangeText(val) : false;\n    }\n\n    return onChangeText ? onChangeText(val) : false;\n  }\n\n  function onLayout(event) {\n    var height = event.nativeEvent.layout.height;\n    setHalfTop(height / 2);\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: setFocus,\n    onLayout: onLayout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }\n  }, staticLabel && React.createElement(AnimatedText, {\n    onPress: setFocus,\n    style: [style, {\n      left: labelStyles != null && labelStyles.left ? labelStyles == null ? void 0 : labelStyles.left : customLabelStyles.leftFocused ? customLabelStyles.leftFocused : 20,\n      top: -(style != null && style.fontSize ? style == null ? void 0 : style.fontSize : 10) / 2\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 11\n    }\n  }, label), React.createElement(View, {\n    style: containerStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 9\n    }\n  }, leftComponent && leftComponent, React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 11\n    }\n  }, !staticLabel && React.createElement(AnimatedText, {\n    onPress: setFocus,\n    style: [style, {\n      fontSize: fontSizeAnimated,\n      transform: [{\n        translateX: leftAnimated\n      }, {\n        translateY: topAnimated\n      }]\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 15\n    }\n  }, label), React.createElement(TextInput, _extends({\n    value: value,\n    onSubmitEditing: onSubmitEditing,\n    secureTextEntry: isPassword !== undefined ? isPassword && secureText : false,\n    onFocus: onFocus !== undefined ? onFocus : handleFocus,\n    onBlur: onBlur !== undefined ? onBlur : handleBlur,\n    ref: inputRef\n  }, rest, {\n    maxLength: mask !== undefined ? mask.length : maxLength !== undefined ? maxLength : undefined,\n    placeholderTextColor: hintTextColor,\n    placeholder: (staticLabel || isFocusedState) && hint ? hint : '',\n    multiline: multiline,\n    onChangeText: onChangeTextCallback,\n    style: input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }\n  })), rightComponent && rightComponent, isPassword && React.createElement(TouchableOpacity, {\n    style: toggleButton,\n    onPress: function onPress() {\n      return _toggleVisibility();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 15\n    }\n  }, secureText && customShowPasswordComponent !== undefined ? customShowPasswordComponent : !secureText && customHidePasswordComponent !== undefined ? customHidePasswordComponent : React.createElement(Image, {\n    source: imgSource,\n    resizeMode: \"contain\",\n    style: img,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 19\n    }\n  }))), showCountdown && maxLength && React.createElement(Text, {\n    style: countdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 13\n    }\n  }, maxLength - (value ? value.length : 0), \" \", countdownLabel))));\n};\n\nexport { setGlobalStyles };\nexport default forwardRef(FloatingLabelInput);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/node_modules/react-native-floating-label-input/src/index.tsx"],"names":["React","useState","useRef","useEffect","forwardRef","useImperativeHandle","Animated","EasingNode","timing","interpolateColors","styles","makeVisibleWhite","makeInvisibleWhite","makeVisibleBlack","makeInvisibleBlack","setGlobalStyles","containerStyles","undefined","customLabelStyles","inputStyles","labelStyles","showPasswordContainerStyles","showPasswordImageStyles","showCountdownStyles","AnimatedText","createAnimatedComponent","Text","FloatingLabelInput","ref","label","mask","isPassword","maxLength","showCountdown","darkTheme","countdownLabel","currencyDivider","maskType","onChangeText","secureTextEntry","customHidePasswordComponent","customShowPasswordComponent","isFocused","onBlur","onFocus","onTogglePassword","togglePassword","leftComponent","rightComponent","customHidePasswordImage","staticLabel","hint","hintTextColor","placeholder","placeholderTextColor","onSubmit","customShowPasswordImage","maxDecimalPlaces","multiline","value","onSelectionChange","animationDuration","rest","halfTop","setHalfTop","isFocusedState","setIsFocused","secureText","setSecureText","inputRef","fontSizeFocused","fontSizeBlurred","colorFocused","colorBlurred","Value","fontColorAnimated","fontSizeAnimated","leftFocused","leftBlurred","leftAnimated","topFocused","topBlurred","topAnimated","_toggleVisibility","animateFocus","animateBlur","focus","current","blur","ReactAnimated","parallel","duration","easing","linear","toValue","start","handleFocus","handleBlur","setFocus","setBlur","toggle","onSubmitEditing","imgSource","style","left","fontSize","color","inputRange","outputColorRange","alignSelf","position","flex","zIndex","input","container","alignItems","flexDirection","toggleButton","img","height","width","countdown","onChangeTextCallback","val","unmasked","replace","positions","i","length","match","push","newValue","offset","j","divider","decimal","includes","intVal","split","decimalValue","arr","splice","join","reverse","pop","initial","decimalPlaces","slice","onLayout","event","nativeEvent","layout","top","transform","translateX","translateY"],"mappings":"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","sourcesContent":["import React, {\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from 'react';\r\nimport {\r\n  View,\r\n  Animated as ReactAnimated,\r\n  TextInput,\r\n  Image,\r\n  Text,\r\n  TouchableOpacity,\r\n  TextInputProps,\r\n  TextStyle,\r\n  ViewStyle,\r\n  ImageStyle,\r\n  TouchableWithoutFeedback,\r\n  LayoutChangeEvent,\r\n} from 'react-native';\r\nimport Animated, { EasingNode, timing, interpolateColors } from 'react-native-reanimated';\r\nimport { styles } from './styles';\r\n\r\nimport makeVisibleWhite from './assets/make_visible_white.png';\r\nimport makeInvisibleWhite from './assets/make_invisible_white.png';\r\nimport makeVisibleBlack from './assets/make_visible_black.png';\r\nimport makeInvisibleBlack from './assets/make_invisible_black.png';\r\n\r\nexport interface Props extends TextInputProps {\r\n  /** Style to the container of whole component */\r\n  containerStyles?: ViewStyle;\r\n  /** Changes the color for hide/show password image */\r\n  darkTheme?: true | false;\r\n  /** Set this to true if you want the label to be always at a set position. Commonly used with hint for displaying both label and hint for your input. Default false. */\r\n  staticLabel?: boolean;\r\n  /** Hint displays only when staticLabel prop is set to true. This prop is used to show a preview of the input to the user */\r\n  hint?: string;\r\n  /** Set the color to the hint */\r\n  hintTextColor?: string;\r\n  /** Value for the label, same as placeholder */\r\n  label: string;\r\n  /** Style to the label */\r\n  labelStyles?: TextStyle;\r\n  /** Set this to true if is password to have a show/hide input and secureTextEntry automatically */\r\n  isPassword?: true | false;\r\n  /** Callback for action submit on the keyboard */\r\n  onSubmit?: Function;\r\n  /** Style to the show/hide password container */\r\n  showPasswordContainerStyles?: ViewStyle;\r\n  /** Style to the show/hide password image */\r\n  showPasswordImageStyles?: ImageStyle;\r\n  /** Style to the input */\r\n  inputStyles?: TextStyle;\r\n  /** Path to your custom image for show input */\r\n  customShowPasswordImage?: string;\r\n  /** Path to your custom image for hide input */\r\n  customHidePasswordImage?: string;\r\n  /** Custom Style for position, size and color for label, when it's focused or blurred */\r\n  customLabelStyles?: CustomLabelProps;\r\n  /** Required if onFocus or onBlur is overrided */\r\n  isFocused?: boolean;\r\n  /** Set a mask to your input */\r\n  mask?: string;\r\n  /** Set mask type */\r\n  maskType?: 'currency' | 'phone' | 'date' | 'card';\r\n  /** Set currency thousand dividers */\r\n  currencyDivider?: ',' | '.';\r\n  /** Maxinum number of decimal places allowed for currency mask. */\r\n  maxDecimalPlaces?: number;\r\n  /** Changes the input from single line input to multiline input */\r\n  multiline?: true | false;\r\n  /** Maxinum number of characters allowed. Overriden by mask if present */\r\n  maxLength?: number;\r\n  /** Shows the remaining number of characters allowed to be typed if maxLength or mask are present */\r\n  showCountdown?: true | false;\r\n  /** Style to the countdown text */\r\n  showCountdownStyles?: TextStyle;\r\n  /** Label for the remaining number of characters allowed shown after the number */\r\n  countdownLabel?: string;\r\n  /** Set your custom show password component */\r\n  customShowPasswordComponent?: JSX.Element;\r\n  /** Set your custom hide password component */\r\n  customHidePasswordComponent?: JSX.Element;\r\n  /** Callback for show/hide password */\r\n  onTogglePassword?: (show: boolean) => void;\r\n  /** Prop for force toggling show/hide password. If set to true, shows the password, and when set to false hides it. */\r\n  togglePassword?: boolean;\r\n  /** Add left component to your input. Usually used for displaying icon */\r\n  leftComponent?: JSX.Element;\r\n  /** Add right component to your input. Be aware if using the input as password this component is positioned before the show/hide component */\r\n  rightComponent?: JSX.Element;\r\n  /** Set custom animation duration. Default 300 ms */\r\n  animationDuration?: number;\r\n}\r\n\r\nexport interface SetGlobalStyles {\r\n  /** Set global styles to all floating-label-inputs container */\r\n  containerStyles?: ViewStyle;\r\n  /** Set global custom styles to all floating-label-inputs labels */\r\n  customLabelStyles?: CustomLabelProps;\r\n  /** Set global styles to all floating-label-inputs input */\r\n  inputStyles?: TextStyle;\r\n  /** Set global styles to all floating-label-inputs label */\r\n  labelStyles?: TextStyle;\r\n  /** Set global styles to all floating-label-inputs show password container */\r\n  showPasswordContainerStyles?: ViewStyle;\r\n  /** Set global styles to all floating-label-inputs show password image */\r\n  showPasswordImageStyles?: ImageStyle;\r\n  /** Set global style to the countdown text */\r\n  showCountdownStyles?: TextStyle;\r\n}\r\n\r\nexport interface CustomLabelProps {\r\n  /** Absolute distance from left-most side of the input when focused */\r\n  leftFocused?: number;\r\n  /** Absolute distance from left-most side of the input when blurred */\r\n  leftBlurred?: number;\r\n  /** Absolute distance from center of the input when focused */\r\n  topFocused?: number;\r\n  /** Absolute distance from center of the input when blurred */\r\n  topBlurred?: number;\r\n  /** Font size of label the when focused */\r\n  fontSizeFocused?: number;\r\n  /** Font size of label the when blurred */\r\n  fontSizeBlurred?: number;\r\n  /** Font color of label the when blurred */\r\n  colorFocused?: string;\r\n  /** Font color of label the when blurred */\r\n  colorBlurred?: string;\r\n}\r\n\r\n/** Set global styles for all your floating-label-inputs */\r\nconst setGlobalStyles: SetGlobalStyles = {\r\n  /**Set global styles to all floating-label-inputs container */\r\n  containerStyles: undefined as ViewStyle | undefined,\r\n  /**Set global custom styles to all floating-label-inputs labels */\r\n  customLabelStyles: undefined as CustomLabelProps | undefined,\r\n  /**Set global styles to all floating-label-inputs input */\r\n  inputStyles: undefined as TextStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs label */\r\n  labelStyles: undefined as TextStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs show password container */\r\n  showPasswordContainerStyles: undefined as ViewStyle | undefined,\r\n  /**Set global styles to all floating-label-inputs show password image */\r\n  showPasswordImageStyles: undefined as ImageStyle | undefined,\r\n  /**Set global style to the countdown text */\r\n  showCountdownStyles: undefined as TextStyle | undefined,\r\n};\r\n\r\ninterface InputRef {\r\n  focus(): void;\r\n  blur(): void;\r\n}\r\n\r\nconst AnimatedText = Animated.createAnimatedComponent(Text);\r\n\r\nconst FloatingLabelInput: React.ForwardRefRenderFunction<InputRef, Props> = (\r\n  {\r\n    label,\r\n    mask,\r\n    isPassword,\r\n    maxLength,\r\n    inputStyles,\r\n    showCountdown,\r\n    showCountdownStyles,\r\n    labelStyles,\r\n    darkTheme,\r\n    countdownLabel,\r\n    currencyDivider,\r\n    maskType,\r\n    onChangeText,\r\n    secureTextEntry,\r\n    customHidePasswordComponent,\r\n    customShowPasswordComponent,\r\n    isFocused,\r\n    onBlur,\r\n    onFocus,\r\n    onTogglePassword,\r\n    togglePassword,\r\n    leftComponent,\r\n    rightComponent,\r\n    customHidePasswordImage,\r\n    customLabelStyles = {},\r\n    staticLabel = false,\r\n    hint,\r\n    hintTextColor,\r\n    placeholder,\r\n    placeholderTextColor,\r\n    onSubmit,\r\n    containerStyles,\r\n    customShowPasswordImage,\r\n    showPasswordContainerStyles,\r\n    maxDecimalPlaces,\r\n    multiline,\r\n    showPasswordImageStyles,\r\n    value = '',\r\n    onSelectionChange,\r\n    animationDuration,\r\n    ...rest\r\n  },\r\n  ref,\r\n) => {\r\n  const [halfTop, setHalfTop] = useState(0);\r\n  const [isFocusedState, setIsFocused] = useState(false);\r\n  const [secureText, setSecureText] = useState(true);\r\n  const inputRef = useRef<any>(null);\r\n\r\n  customLabelStyles = {\r\n    fontSizeFocused: 10,\r\n    fontSizeBlurred: 14,\r\n    colorFocused: '#49658c',\r\n    colorBlurred: '#49658c',\r\n    ...setGlobalStyles?.customLabelStyles,\r\n    ...customLabelStyles,\r\n  };\r\n\r\n  const [fontColorAnimated] = useState(new Animated.Value(0));\r\n\r\n  const [fontSizeAnimated] = useState(\r\n    new Animated.Value(\r\n      isFocused\r\n        ? customLabelStyles.fontSizeFocused\r\n          ? customLabelStyles.fontSizeFocused\r\n          : 10\r\n        : customLabelStyles.fontSizeBlurred\r\n        ? customLabelStyles.fontSizeBlurred\r\n        : 14,\r\n    ),\r\n  );\r\n\r\n  const [leftAnimated] = useState(\r\n    new Animated.Value(\r\n      staticLabel\r\n        ? customLabelStyles?.leftFocused !== undefined\r\n          ? customLabelStyles.leftFocused\r\n          : 15\r\n        : customLabelStyles != undefined &&\r\n          customLabelStyles.leftBlurred !== undefined\r\n        ? customLabelStyles.leftBlurred\r\n        : 0,\r\n    ),\r\n  );\r\n\r\n  const [topAnimated] = useState(\r\n    new Animated.Value(\r\n      staticLabel\r\n        ? customLabelStyles?.topFocused !== undefined\r\n          ? customLabelStyles.topFocused\r\n          : 0\r\n        : customLabelStyles.topBlurred\r\n        ? customLabelStyles.topBlurred\r\n        : 0,\r\n    ),\r\n  );\r\n\r\n  useEffect(() => {\r\n      if (isFocused === undefined) {\r\n        if (value !== '' || isFocusedState) {\r\n          setIsFocused(true);\r\n        } else if (value === '' || value === null) {\r\n          setIsFocused(false);\r\n        }\r\n      }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n      if (isFocused !== undefined) {\r\n        if (value !== '' || isFocused) {\r\n          setIsFocused(true);\r\n        } else {\r\n          setIsFocused(false);\r\n        }\r\n      }\r\n  }, [isFocused, value]);\r\n\r\n  useEffect(() => {\r\n    if (togglePassword !== undefined) {\r\n      _toggleVisibility(togglePassword);\r\n    }\r\n  }, [togglePassword]);\r\n\r\n  useEffect(() => {\r\n    if (isFocusedState || value !== '') {\r\n      if (halfTop !== 0) {\r\n        animateFocus();\r\n      }\r\n    } else {\r\n      animateBlur();\r\n  }\r\n  }, [isFocusedState]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus() {\r\n      inputRef.current.focus();\r\n    },\r\n    blur() {\r\n      inputRef.current.blur();\r\n    },\r\n  }));\r\n  \r\n  useEffect(() => {\r\n    if (\r\n      !staticLabel &&\r\n      customLabelStyles.topFocused === undefined &&\r\n      isFocusedState\r\n    ) {\r\n      ReactAnimated.parallel([\r\n        // @ts-ignore\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftFocused\r\n            ? customLabelStyles.leftFocused\r\n            : 0,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeFocused\r\n            ? customLabelStyles.fontSizeFocused\r\n            : 10,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topFocused\r\n            ? customLabelStyles.topFocused\r\n            : -halfTop +\r\n              (isFocusedState\r\n                ? customLabelStyles.fontSizeFocused\r\n                  ? customLabelStyles.fontSizeFocused\r\n                  : 10\r\n                : customLabelStyles.fontSizeBlurred\r\n                ? customLabelStyles.fontSizeBlurred\r\n                : 14),\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(fontColorAnimated, {\r\n          toValue: 1,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    }else if(staticLabel &&\r\n      isFocusedState){\r\n        Animated.timing(fontColorAnimated, {\r\n          toValue: 1,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }).start();\r\n    }\r\n  }, [halfTop]);\r\n\r\n  function animateFocus() {\r\n    if (!staticLabel) {\r\n      ReactAnimated.parallel([\r\n        // @ts-ignore\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftFocused\r\n            ? customLabelStyles.leftFocused\r\n            : 0,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeFocused\r\n            ? customLabelStyles.fontSizeFocused\r\n            : 10,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topFocused\r\n            ? customLabelStyles.topFocused\r\n            : -halfTop +\r\n              (isFocusedState\r\n                ? customLabelStyles.fontSizeFocused\r\n                  ? customLabelStyles.fontSizeFocused\r\n                  : 10\r\n                : customLabelStyles.fontSizeBlurred\r\n                ? customLabelStyles.fontSizeBlurred\r\n                : 14),\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(fontColorAnimated, {\r\n          toValue: 1,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    }else{\r\n      Animated.timing(fontColorAnimated, {\r\n        toValue: 1,\r\n        duration: animationDuration ? animationDuration : 300,\r\n        easing: EasingNode.linear,\r\n      }).start();\r\n    }\r\n  }\r\n\r\n  function animateBlur() {\r\n    if (!staticLabel) {\r\n      ReactAnimated.parallel([\r\n        // @ts-ignore\r\n        timing(leftAnimated, {\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n          toValue: customLabelStyles.leftBlurred\r\n            ? customLabelStyles.leftBlurred\r\n            : 0,\r\n        }),\r\n        // @ts-ignore\r\n        timing(fontSizeAnimated, {\r\n          toValue: customLabelStyles.fontSizeBlurred\r\n            ? customLabelStyles.fontSizeBlurred\r\n            : 14,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        // @ts-ignore\r\n        timing(topAnimated, {\r\n          toValue: customLabelStyles.topBlurred\r\n            ? customLabelStyles.topBlurred\r\n            : 0,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n        timing(fontColorAnimated, {\r\n          toValue: 0,\r\n          duration: animationDuration ? animationDuration : 300,\r\n          easing: EasingNode.linear,\r\n        }),\r\n      ]).start();\r\n    }else{\r\n      Animated.timing(fontColorAnimated, {\r\n        toValue: 0,\r\n        duration: animationDuration ? animationDuration : 300,\r\n        easing: EasingNode.linear,\r\n      }).start();\r\n    }\r\n  }\r\n\r\n  function handleFocus() {\r\n    setIsFocused(true);\r\n  }\r\n\r\n  function handleBlur() {\r\n    if (value === '') {\r\n      setIsFocused(false);\r\n    }\r\n  }\r\n\r\n  function setFocus() {\r\n    inputRef.current?.focus();\r\n  }\r\n\r\n  function setBlur() {\r\n    inputRef.current?.blur();\r\n  }\r\n\r\n  function _toggleVisibility(toggle?: boolean) {\r\n    if (toggle === undefined) {\r\n      if (onTogglePassword) {\r\n        onTogglePassword(!secureText);\r\n      }\r\n      setSecureText(!secureText);\r\n      secureText ? setFocus() : setBlur();\r\n    } else {\r\n      if (!((secureText && !toggle) || (!secureText && toggle))) {\r\n        if (onTogglePassword) {\r\n          onTogglePassword(!toggle);\r\n        }\r\n        setSecureText(!toggle);\r\n        toggle ? setFocus() : setBlur();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onSubmitEditing() {\r\n    if (onSubmit !== undefined) {\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  let imgSource = darkTheme\r\n    ? secureText\r\n      ? customShowPasswordImage || makeVisibleBlack\r\n      : customHidePasswordImage || makeInvisibleBlack\r\n    : secureText\r\n    ? customShowPasswordImage || makeVisibleWhite\r\n    : customHidePasswordImage || makeInvisibleWhite;\r\n\r\n\r\n  const style: TextStyle = {\r\n    ...setGlobalStyles?.labelStyles,\r\n    ...labelStyles,\r\n    left: labelStyles?.left !== undefined ? labelStyles?.left : 5,\r\n    fontSize: staticLabel\r\n      ? customLabelStyles?.fontSizeFocused !== undefined\r\n        ? customLabelStyles.fontSizeFocused\r\n        : 10\r\n      : !isFocusedState\r\n      ? customLabelStyles.fontSizeBlurred\r\n      : customLabelStyles.fontSizeFocused,\r\n    color: interpolateColors(fontColorAnimated, {\r\n      inputRange: [0, 1],\r\n      outputColorRange: [customLabelStyles.colorBlurred,customLabelStyles.colorFocused]\r\n    }),\r\n    alignSelf: 'center',\r\n    position: 'absolute',\r\n    flex: 1,\r\n    zIndex: 999,\r\n  };\r\n\r\n  let input: TextStyle =\r\n    inputStyles !== undefined\r\n      ? inputStyles\r\n      : setGlobalStyles?.inputStyles !== undefined\r\n      ? setGlobalStyles.inputStyles\r\n      : styles.input;\r\n\r\n  input = {\r\n    ...input,\r\n    flex: 1,\r\n    color:\r\n      input.color !== undefined ? input.color : customLabelStyles.colorFocused,\r\n    zIndex: style?.zIndex !== undefined ? style.zIndex - 2 : 0,\r\n  };\r\n\r\n  containerStyles =\r\n    containerStyles !== undefined\r\n      ? containerStyles\r\n      : setGlobalStyles?.containerStyles !== undefined\r\n      ? setGlobalStyles?.containerStyles\r\n      : styles.container;\r\n\r\n  containerStyles = {\r\n    ...containerStyles,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    zIndex: style?.zIndex !== undefined ? style.zIndex - 6 : 0,\r\n  };\r\n\r\n  let toggleButton =\r\n    showPasswordContainerStyles !== undefined\r\n      ? showPasswordContainerStyles\r\n      : setGlobalStyles?.showPasswordContainerStyles !== undefined\r\n      ? setGlobalStyles.showPasswordContainerStyles\r\n      : styles.toggleButton;\r\n\r\n  toggleButton = {\r\n    ...toggleButton,\r\n    alignSelf: 'center',\r\n  };\r\n\r\n  let img =\r\n    showPasswordImageStyles !== undefined\r\n      ? showPasswordImageStyles\r\n      : setGlobalStyles?.showPasswordImageStyles !== undefined\r\n      ? setGlobalStyles.showPasswordImageStyles\r\n      : styles.img;\r\n\r\n  img = {\r\n    height: 25,\r\n    width: 25,\r\n    ...img,\r\n  };\r\n\r\n  const countdown = {\r\n    ...styles.countdown,\r\n    ...setGlobalStyles?.showCountdownStyles,\r\n    ...showCountdownStyles,\r\n  };\r\n\r\n  function onChangeTextCallback(val: string) {\r\n    if (maskType !== undefined || mask !== undefined) {\r\n      if (maskType !== 'currency' && mask !== undefined) {\r\n        let unmasked = val.replace(/[^0-9A-Za-z]/g, '');\r\n\r\n        // pegar as posições dos caracteres especiais.\r\n        let positions: number[] = [];\r\n        for (let i = 0; i < mask.length; i++) {\r\n          if (mask[i].match(/[^0-9A-Za-z]/)) {\r\n            positions.push(i);\r\n          }\r\n        }\r\n\r\n        let newValue = '';\r\n        let offset = 0;\r\n        for (let j = 0; j < unmasked.length; j++) {\r\n          // adicionar caracteres especiais\r\n          while (mask[j + offset]?.match(/[^0-9A-Za-z]/)) {\r\n            newValue += mask[j + offset];\r\n            offset++;\r\n          }\r\n          newValue += unmasked[j];\r\n        }\r\n\r\n        return onChangeText ? onChangeText(newValue) : false;\r\n      }\r\n      if (maskType === 'currency') {\r\n        let divider = '';\r\n        let decimal = '';\r\n        if (currencyDivider === ',') {\r\n          divider = ',';\r\n          decimal = '.';\r\n        } else {\r\n          divider = '.';\r\n          decimal = ',';\r\n        }\r\n        if (value !== undefined && value.length < val.length) {\r\n          if (val.includes(decimal)) {\r\n            let intVal = val.split(decimal)[0].replace(/[,.]/g, '');\r\n            let decimalValue = val.split(decimal)[1];\r\n            if (intVal.length > 3) {\r\n              let arr: string[] = [];\r\n              for (let i = 0; i < intVal.length; i += 3) {\r\n                arr.push(\r\n                  intVal\r\n                    .split('')\r\n                    .splice(intVal.length - i, 3)\r\n                    .join(''),\r\n                );\r\n              }\r\n\r\n              arr = arr.reverse();\r\n              arr.pop();\r\n              let initial = arr.join('');\r\n              if (intVal.includes(initial)) {\r\n                intVal = intVal.replace(initial, '');\r\n              }\r\n              intVal = intVal + divider + arr.join(divider);\r\n            }\r\n\r\n            val = intVal + decimal + decimalValue;\r\n\r\n            let decimalPlaces: number =\r\n              maxDecimalPlaces !== undefined ? maxDecimalPlaces : 2;\r\n\r\n            if (\r\n              val.split(decimal)[1] !== undefined &&\r\n              value.split(decimal)[1] !== undefined &&\r\n              val.split(decimal)[1].length > value.split(decimal)[1].length &&\r\n              value.split(decimal)[1].length === decimalPlaces\r\n            ) {\r\n              return;\r\n            }\r\n            if (val.split(decimal)[1].length > decimalPlaces) {\r\n              val = val.slice(0, val.length - 1);\r\n            }\r\n          } else if (val.length > 3) {\r\n            let arr: string[] = [];\r\n            let unmasked = val.replace(/[,.]/g, '');\r\n            for (let i = 0; i < unmasked.length; i += 3) {\r\n              arr.push(\r\n                unmasked\r\n                  .split('')\r\n                  .splice(unmasked.length - i, 3)\r\n                  .join(''),\r\n              );\r\n            }\r\n\r\n            arr = arr.reverse();\r\n            arr.pop();\r\n            let initial = arr.join('');\r\n            if (unmasked.includes(initial)) {\r\n              unmasked = unmasked.replace(initial, '');\r\n            }\r\n            val = unmasked + divider + arr.join(divider);\r\n          }\r\n        }\r\n        return onChangeText ? onChangeText(val) : false;\r\n      }\r\n      return onChangeText ? onChangeText(val) : false;\r\n    }\r\n    return onChangeText ? onChangeText(val) : false;\r\n  }\r\n\r\n  function onLayout(event: LayoutChangeEvent) {\r\n    let { height } = event.nativeEvent.layout;\r\n    setHalfTop(height / 2);\r\n  }\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={setFocus} onLayout={onLayout}>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {staticLabel && (\r\n          <AnimatedText\r\n            onPress={setFocus}\r\n            style={[\r\n              style,\r\n              {\r\n                left: labelStyles?.left\r\n                  ? labelStyles?.left\r\n                  : customLabelStyles.leftFocused\r\n                  ? customLabelStyles.leftFocused\r\n                  : 20,\r\n                top: -(style?.fontSize ? style?.fontSize : 10) / 2,\r\n              },\r\n            ]}\r\n          >\r\n            {label}\r\n          </AnimatedText>\r\n        )}\r\n        <View style={containerStyles}>\r\n          {leftComponent && leftComponent}\r\n          <View style={{ flex: 1, flexDirection: 'row' }}>\r\n            {!staticLabel && (\r\n              <AnimatedText\r\n                onPress={setFocus}\r\n                style={[\r\n                  style,\r\n                  // @ts-ignore\r\n                  {\r\n                    fontSize: fontSizeAnimated,\r\n                    transform: [\r\n                      { translateX: leftAnimated },\r\n                      { translateY: topAnimated },\r\n                    ],\r\n                  },\r\n                ]}\r\n              >\r\n                {label}\r\n              </AnimatedText>\r\n            )}\r\n            <TextInput\r\n              value={value}\r\n              onSubmitEditing={onSubmitEditing}\r\n              secureTextEntry={\r\n                isPassword !== undefined ? isPassword && secureText : false\r\n              }\r\n              onFocus={onFocus !== undefined ? onFocus : handleFocus}\r\n              onBlur={onBlur !== undefined ? onBlur : handleBlur}\r\n              ref={inputRef}\r\n              {...rest}\r\n              maxLength={\r\n                mask !== undefined\r\n                  ? mask.length\r\n                  : maxLength !== undefined\r\n                  ? maxLength\r\n                  : undefined\r\n              }\r\n              placeholderTextColor={hintTextColor}\r\n              placeholder={(staticLabel || isFocusedState) && hint ? hint : ''}\r\n              multiline={multiline}\r\n              onChangeText={onChangeTextCallback}\r\n              style={input}\r\n            />\r\n            {rightComponent && rightComponent}\r\n            {isPassword && (\r\n              <TouchableOpacity\r\n                style={toggleButton}\r\n                onPress={() => _toggleVisibility()}\r\n              >\r\n                {secureText && customShowPasswordComponent !== undefined ? (\r\n                  customShowPasswordComponent\r\n                ) : !secureText && customHidePasswordComponent !== undefined ? (\r\n                  customHidePasswordComponent\r\n                ) : (\r\n                  <Image source={imgSource} resizeMode=\"contain\" style={img} />\r\n                )}\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          {showCountdown && maxLength && (\r\n            <Text style={countdown}>\r\n              {maxLength - (value ? value.length : 0)} {countdownLabel}\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\nexport { setGlobalStyles };\r\nexport default forwardRef(FloatingLabelInput);\r\n"]},"metadata":{},"sourceType":"module"}