{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\components\\\\UI\\\\AppInput.js\";\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport appValues from \"../../constants/appValues\";\nvar AppInput = React.forwardRef(function (props, ref) {\n  var translation = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setisFocused = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setvalue = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.labelContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, isFocused && React.createElement(Text, {\n    style: [styles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }\n  }, props.label)), props.label !== \"Password\" ? React.createElement(View, {\n    style: [styles.textInput],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.Text, {\n    style: {\n      color: !isFocused ? '#aaa' : 'transparent',\n      position: \"absolute\",\n      left: 20,\n      top: 22,\n      display: props.value == '' ? isFocused ? 'none' : 'flex' : 'none',\n      transform: [{\n        translateY: translation\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, props.label), React.createElement(TextInput, _extends({\n    style: styles.input,\n    value: props.value,\n    onChangeText: function onChangeText(input) {\n      return setvalue(input);\n    },\n    ref: ref,\n    onFocus: function onFocus() {\n      Animated.timing(translation, {\n        toValue: -10,\n        useNativeDriver: true,\n        duration: 180\n      }).start(function () {\n        return setisFocused(true);\n      });\n      console.log('start', translation);\n    },\n    onBlur: function onBlur() {\n      Animated.timing(translation, {\n        toValue: 0,\n        useNativeDriver: true,\n        duration: 100\n      }).start(function () {\n        return setisFocused(false);\n      });\n      console.log(translation);\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }))) : React.createElement(View, {\n    style: styles.passwordInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.Text, {\n    style: {\n      color: !isFocused ? '#aaa' : 'transparent',\n      position: \"absolute\",\n      left: 20,\n      top: 22,\n      display: props.value == '' ? isFocused ? 'none' : 'flex' : 'none',\n      transform: [{\n        translateY: translation\n      }]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, props.label), React.createElement(TextInput, _extends({\n    value: props.value,\n    style: styles.textInput1,\n    ref: ref,\n    onFocus: function onFocus() {\n      Animated.timing(translation, {\n        toValue: -10,\n        useNativeDriver: true,\n        duration: 180\n      }).start(function () {\n        return setisFocused(true);\n      });\n      console.log('start', translation);\n    },\n    onBlur: function onBlur() {\n      Animated.timing(translation, {\n        toValue: 0,\n        useNativeDriver: true,\n        duration: 100\n      }).start(function () {\n        return setisFocused(false);\n      });\n      console.log(translation);\n    }\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), React.createElement(MaterialCommunityIcons, {\n    name: \"eye\",\n    size: appValues.passwordIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })));\n});\nvar styles = StyleSheet.create({\n  container: {\n    height: 65,\n    position: \"relative\",\n    backgroundColor: \"transparent\",\n    marginBottom: 40,\n    shadowColor: \"grey\",\n    shadowOffset: {\n      height: 12\n    },\n    shadowOpacity: 0.04,\n    shadowRadius: 10\n  },\n  labelContainer: {\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    top: -13,\n    left: 20,\n    padding: 5,\n    zIndex: 50\n  },\n  label: {\n    color: \"#135FDC\"\n  },\n  textInput: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#135FDC\",\n    justifyContent: \"flex-end\",\n    height: 44,\n    borderRadius: 5,\n    paddingHorizontal: 20,\n    backgroundColor: 'white'\n  },\n  input: {\n    flex: 1,\n    fontSize: appValues.fontSize\n  },\n  passwordInput: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#135FDC\",\n    justifyContent: \"flex-end\",\n    borderRadius: 5,\n    paddingRight: 5,\n    backgroundColor: 'white'\n  },\n  textInput1: {\n    flex: 1,\n    paddingHorizontal: 20,\n    fontSize: appValues.fontSize\n  },\n  placeholder: {}\n});\nexport { AppInput };","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/components/UI/AppInput.js"],"names":["React","useState","useRef","useEffect","MaterialCommunityIcons","appValues","AppInput","forwardRef","props","ref","translation","Animated","Value","current","isFocused","setisFocused","value","setvalue","styles","container","labelContainer","label","textInput","color","position","left","top","display","transform","translateY","input","timing","toValue","useNativeDriver","duration","start","console","log","passwordInput","textInput1","passwordIcon","StyleSheet","create","height","backgroundColor","marginBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","padding","zIndex","flex","borderWidth","borderColor","justifyContent","borderRadius","paddingHorizontal","fontSize","flexDirection","alignItems","paddingRight","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { View, Text, TextInput, StyleSheet, Animated, Keyboard } from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport appValues from \"../../constants/appValues\";\n\nconst AppInput = React.forwardRef((props, ref) => {\n  const translation = useRef(new Animated.Value(0)).current;\n\n  const [isFocused, setisFocused] = useState(false);\n  const [value, setvalue] = useState(\"\");\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.labelContainer}>\n        {isFocused && <Text style={[styles.label]}>{props.label}</Text>}\n      </View>\n      {props.label !== \"Password\" ? (\n        <View style={[styles.textInput]}>\n          <Animated.Text\n            style={{\n              color: !isFocused ? '#aaa':'transparent',\n              position: \"absolute\",\n              left: 20,\n              top: 22,\n              display: props.value == '' ? isFocused ? 'none':'flex': 'none',\n              transform:[{ translateY: translation }],\n            }}\n          >\n            {props.label}\n          </Animated.Text>\n          <TextInput\n            style={styles.input}\n            value={props.value}\n            onChangeText={(input) => setvalue(input)}\n            ref={ref}\n            onFocus={() => {\n                Animated.timing(translation, {\n                    toValue: -10,\n                    useNativeDriver: true,\n                    duration: 180,\n                  }).start(() => setisFocused(true));\n                  console.log('start',translation)\n            }}\n            onBlur={() => {\n                Animated.timing(translation, {\n                    toValue: 0,\n                    useNativeDriver: true,\n                    duration: 100,\n                  }).start(() => setisFocused(false));\n                  console.log(translation)\n                  // props.focus()\n            }}\n            {...props}\n          />\n        </View>\n      ) : (\n        <View style={styles.passwordInput}>\n          <Animated.Text\n            style={{\n              color: !isFocused ? '#aaa':'transparent',\n              position: \"absolute\",\n              left: 20,\n              top: 22,\n              display: props.value == '' ? isFocused ? 'none':'flex': 'none',\n              transform:[{ translateY: translation }]\n            }}\n          >\n            {props.label}\n          </Animated.Text>\n          <TextInput\n          value={props.value}\n            style={styles.textInput1}\n            ref={ref}\n            // ref={(ref) => {\n            //   props.ref = ref;\n            // }}\n            onFocus={() => {\n              Animated.timing(translation, {\n                  toValue: -10,\n                  useNativeDriver: true,\n                  duration: 180,\n                }).start(() => setisFocused(true));\n                console.log('start',translation)\n          }}\n          onBlur={() => {\n              Animated.timing(translation, {\n                  toValue: 0,\n                  useNativeDriver: true,\n                  duration: 100,\n                }).start(() => setisFocused(false));\n                console.log(translation)\n              //  props.focus()\n          }}\n            {...props}\n          />\n          <MaterialCommunityIcons\n            name=\"eye\"\n            size={appValues.passwordIcon}\n          />\n        </View>\n      )}\n    </View>\n  );\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 65,\n    position: \"relative\",\n    backgroundColor: \"transparent\",\n    marginBottom: 40,\n    shadowColor: \"grey\",\n    shadowOffset: { height: 12 },\n    shadowOpacity: 0.04,\n    shadowRadius: 10,\n  },\n  labelContainer: {\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    top: -13,\n    left: 20,\n    padding: 5,\n    zIndex: 50,\n  },\n  label: {\n    color: \"#135FDC\",\n  },\n  textInput: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#135FDC\",\n    justifyContent: \"flex-end\",\n    height: 44,\n    borderRadius: 5,\n    paddingHorizontal: 20,\n    backgroundColor:'white'\n  },\n  input:{\n      flex:1,\n      fontSize:appValues.fontSize\n  },\n  passwordInput: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#135FDC\",\n    justifyContent: \"flex-end\",\n    // height: 44,\n    borderRadius: 5,\n    // paddingHorizontal: 20,\n    paddingRight: 5,\n    backgroundColor:'white'\n  },\n  textInput1: {\n    flex: 1,\n    paddingHorizontal: 20,\n    fontSize:appValues.fontSize\n  },\n  placeholder: {},\n});\n\nexport { AppInput }\n"]},"metadata":{},"sourceType":"module"}