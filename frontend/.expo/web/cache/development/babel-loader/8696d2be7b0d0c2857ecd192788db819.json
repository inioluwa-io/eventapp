{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\components\\\\UI\\\\AppButton.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport appValues from \"../../constants/appValues\";\nimport colors from \"../../constants/colors\";\nimport globalStyles from \"../../constants/global.styles\";\nexport default function AppButton(_ref) {\n  var title = _ref.title,\n      transparent = _ref.transparent,\n      onPress = _ref.onPress,\n      disabled = _ref.disabled,\n      outline = _ref.outline,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"md\" : _ref$size;\n\n  var getButtonSize = function getButtonSize(size) {\n    switch (size) {\n      case \"sm\":\n        {\n          return globalStyles.blockButtonSm;\n        }\n\n      default:\n        {\n          return globalStyles.blockButton;\n        }\n    }\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: [getButtonSize(size), transparent && {\n      backgroundColor: \"transparent\"\n    }, disabled && {\n      backgroundColor: colors.primary + 80\n    }, outline && {\n      backgroundColor: \"transparent\",\n      borderWidth: 1,\n      borderColor: colors.primary\n    }],\n    onPress: onPress,\n    activeOpacity: 0.6,\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [globalStyles.buttonLabel, transparent && {\n      color: colors.primary\n    }, outline && {\n      color: colors.primary\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, title));\n}","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/components/UI/AppButton.js"],"names":["React","appValues","colors","globalStyles","AppButton","title","transparent","onPress","disabled","outline","size","getButtonSize","blockButtonSm","blockButton","backgroundColor","primary","borderWidth","borderColor","buttonLabel","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,OAAOC,YAAP;AAEA,eAAe,SAASC,SAAT,OAOZ;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,uBADDC,IACC;AAAA,MADDA,IACC,0BADM,IACN;;AACD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,IAAD,EAAU;AAC9B,YAAQA,IAAR;AACE,WAAK,IAAL;AAAW;AACT,iBAAOP,YAAY,CAACS,aAApB;AACD;;AACD;AAAS;AACP,iBAAOT,YAAY,CAACU,WAApB;AACD;AANH;AAQD,GATD;;AAUA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CACLF,aAAa,CAACD,IAAD,CADR,EAELJ,WAAW,IAAI;AAAEQ,MAAAA,eAAe,EAAE;AAAnB,KAFV,EAGLN,QAAQ,IAAI;AAAEM,MAAAA,eAAe,EAAEZ,MAAM,CAACa,OAAP,GAAiB;AAApC,KAHP,EAILN,OAAO,IAAI;AACTK,MAAAA,eAAe,EAAE,aADR;AAETE,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,WAAW,EAAEf,MAAM,CAACa;AAHX,KAJN,CADT;AAWE,IAAA,OAAO,EAAER,OAXX;AAYE,IAAA,aAAa,EAAE,GAZjB;AAaE,IAAA,QAAQ,EAAEC,QAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLL,YAAY,CAACe,WADR,EAELZ,WAAW,IAAI;AAAEa,MAAAA,KAAK,EAAEjB,MAAM,CAACa;AAAhB,KAFV,EAGLN,OAAO,IAAI;AAAEU,MAAAA,KAAK,EAAEjB,MAAM,CAACa;AAAhB,KAHN,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGV,KAPH,CAfF,CADF;AA2BD","sourcesContent":["import React from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\nimport appValues from \"../../constants/appValues\";\nimport colors from \"../../constants/colors\";\nimport globalStyles from \"../../constants/global.styles\";\n\nexport default function AppButton({\n  title,\n  transparent,\n  onPress,\n  disabled,\n  outline,\n  size = \"md\",\n}) {\n  const getButtonSize = (size) => {\n    switch (size) {\n      case \"sm\": {\n        return globalStyles.blockButtonSm;\n      }\n      default: {\n        return globalStyles.blockButton;\n      }\n    }\n  };\n  return (\n    <TouchableOpacity\n      style={[\n        getButtonSize(size),\n        transparent && { backgroundColor: \"transparent\" },\n        disabled && { backgroundColor: colors.primary + 80 },\n        outline && {\n          backgroundColor: \"transparent\",\n          borderWidth: 1,\n          borderColor: colors.primary,\n        },\n      ]}\n      onPress={onPress}\n      activeOpacity={0.6}\n      disabled={disabled}\n    >\n      <Text\n        style={[\n          globalStyles.buttonLabel,\n          transparent && { color: colors.primary },\n          outline && { color: colors.primary },\n        ]}\n      >\n        {title}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}