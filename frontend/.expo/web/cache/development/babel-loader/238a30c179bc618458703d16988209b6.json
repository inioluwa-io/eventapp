{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Code\\\\chowberry-merchant-main (1)\\\\chowberry-merchant-main\\\\screens\\\\Authentication\\\\Signin.js\";\nimport React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport { AppInput } from \"../../components/UI/AppInput\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser as _loginUser } from \"../../utilities/actions/auth\";\nimport { connect } from \"react-redux\";\n\nfunction SignIn(props) {\n  var _navigation = useNavigation();\n\n  var _emailinput = useRef(0);\n\n  var _passwordinput = useRef(0);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  return React.createElement(AppBackground, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(AppPaddedView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(TopImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: png.ColorLogo,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })), React.createElement(AppTitleNote, {\n    login: true,\n    type: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: globalStyles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(FloatingLabelInput, {\n    label: \"Email Address\",\n    value: email,\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(input) {\n      return setEmail(input.trim());\n    },\n    containerStyles: globalStyles.inputWrap,\n    labelStyles: globalStyles.floatingLabelStyle,\n    customLabelStyles: customLabelStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), React.createElement(AppInput, {\n    label: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(input) {\n      return setPassword(input);\n    },\n    ref: _passwordinput,\n    onSubmitEditing: function onSubmitEditing() {\n      return Keyboard.dismiss();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(ForgotPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(AppButton, {\n    title: \"Sign In\",\n    onPress: function onPress() {\n      return props.loginUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(LoginFooter, {\n    text: \"Don't have an account ? \",\n    linkText: \"Sign up\",\n    navigation: function navigation() {\n      return _navigation.navigate(\"SignUp\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth;\n  return {\n    auth: auth\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginUser: function loginUser() {\n      return dispatch(_loginUser());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Code/chowberry-merchant-main (1)/chowberry-merchant-main/screens/Authentication/Signin.js"],"names":["React","useState","useRef","useNavigation","png","AppBackground","AppTitleNote","TopImageWrapper","AppInput","ForgotPassword","AppButton","LoginFooter","AppPaddedView","loginUser","connect","SignIn","props","navigation","_emailinput","_passwordinput","password","setPassword","email","setEmail","ColorLogo","styles","image","globalStyles","inputContainer","input","trim","inputWrap","floatingLabelStyle","customLabelStyles","Keyboard","dismiss","navigate","StyleSheet","create","width","height","resizeMode","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;;;;AAEA,OAAOC,GAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,SAASC,QAAT;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,SAASC,SAAS,IAATA,UAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAMC,WAAU,GAAGd,aAAa,EAAhC;;AACA,MAAMe,WAAW,GAAGhB,MAAM,CAAC,CAAD,CAA1B;;AACA,MAAMiB,cAAc,GAAGjB,MAAM,CAAC,CAAD,CAA7B;;AAEA,kBAAgCD,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOmB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BpB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOqB,KAAP;AAAA,MAAcC,QAAd;;AAEA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEnB,GAAG,CAACoB,SAAnB;AAA8B,IAAA,KAAK,EAAEC,MAAM,CAACC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,YAAY,CAACC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,KAAK,EAAEN,KAFT;AAGE,IAAA,YAAY,EAAC,eAHf;AAIE,IAAA,YAAY,EAAE,sBAACO,KAAD;AAAA,aAAWN,QAAQ,CAACM,KAAK,CAACC,IAAN,EAAD,CAAnB;AAAA,KAJhB;AAKE,IAAA,eAAe,EAAEH,YAAY,CAACI,SALhC;AAME,IAAA,WAAW,EAAEJ,YAAY,CAACK,kBAN5B;AAOE,IAAA,iBAAiB,EAAEC,iBAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAPF,EAkBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,KAAK,EAAEb,QAFT;AAGE,IAAA,YAAY,EAAE,sBAACS,KAAD;AAAA,aAAWR,WAAW,CAACQ,KAAD,CAAtB;AAAA,KAHhB;AAIE,IAAA,GAAG,EAAEV,cAJP;AAKE,IAAA,eAAe,EAAE;AAAA,aAAMe,QAAQ,CAACC,OAAT,EAAN;AAAA,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,OAAO,EAAE;AAAA,aAAMnB,KAAK,CAACH,SAAN,EAAN;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAE,0BADR;AAEE,IAAA,QAAQ,EAAE,SAFZ;AAGE,IAAA,UAAU,EAAE;AAAA,aAAMI,WAAU,CAACmB,QAAX,CAAoB,QAApB,CAAN;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF,CADF;AAqCD;;AACD,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,KAAK,EAAE;AACLa,IAAAA,KAAK,EAAE,GADF;AAELC,IAAAA,MAAM,EAAE,GAFH;AAGLC,IAAAA,UAAU,EAAE;AAHP;AADwB,CAAlB,CAAf;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAQC,IAAR,GAAiBD,KAAjB,CAAQC,IAAR;AACA,SAAO;AAAEA,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAHD;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLjC,IAAAA,SAAS,EAAE;AAAA,aAAMiC,QAAQ,CAACjC,UAAS,EAAV,CAAd;AAAA;AADN,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CAAC4B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,MAA7C,CAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Image, Keyboard, StyleSheet, TextInput } from \"react-native\";\nimport png from \"../../assets/png\";\nimport AppBackground from \"../../components/UI/AppBackground\";\nimport AppTitleNote from \"../../components/UI/AppTitleNote\";\nimport TopImageWrapper from \"../../components/UI/TopImageWrapper\";\nimport { AppInput } from \"../../components/UI/AppInput\";\nimport ForgotPassword from \"../../components/UI/AppForgotPasswordLine\";\nimport AppButton from \"../../components/UI/AppButton\";\nimport LoginFooter from \"../../components/UI/LoginFooter\";\nimport AppPaddedView from \"../../components/UI/AppPaddedView\";\nimport { loginUser } from \"../../utilities/actions/auth\";\nimport { connect } from \"react-redux\";\n\nfunction SignIn(props) {\n  const navigation = useNavigation();\n  const _emailinput = useRef(0);\n  const _passwordinput = useRef(0);\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <AppBackground>\n      <AppPaddedView>\n        <TopImageWrapper>\n          <Image source={png.ColorLogo} style={styles.image} />\n        </TopImageWrapper>\n\n        <AppTitleNote login type=\"login\" />\n\n        <View style={globalStyles.inputContainer}>\n        <FloatingLabelInput\n          label=\"Email Address\"\n          value={email}\n          keyboardType=\"email-address\"\n          onChangeText={(input) => setEmail(input.trim())}\n          containerStyles={globalStyles.inputWrap}\n          labelStyles={globalStyles.floatingLabelStyle}\n          customLabelStyles={customLabelStyles}\n        />\n      </View>\n        <AppInput\n          label=\"Password\"\n          value={password}\n          onChangeText={(input) => setPassword(input)}\n          ref={_passwordinput}\n          onSubmitEditing={() => Keyboard.dismiss()}\n        />\n        <ForgotPassword />\n        <AppButton title=\"Sign In\" onPress={() => props.loginUser()} />\n        <LoginFooter\n          text={\"Don't have an account ? \"}\n          linkText={\"Sign up\"}\n          navigation={() => navigation.navigate(\"SignUp\")}\n        />\n      </AppPaddedView>\n    </AppBackground>\n  );\n}\nconst styles = StyleSheet.create({\n  image: {\n    width: 150,\n    height: 150,\n    resizeMode: \"contain\",\n  },\n});\n\nconst mapStateToProps = (state) => {\n  const { auth } = state;\n  return { auth };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginUser: () => dispatch(loginUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}